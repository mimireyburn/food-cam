<head>
  <title>Cook Up A Plan</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 550px}
    
    /* Change body font */ 
    body, a{
      font-family: 'Atkinson Hyperlegible', sans-serif; 
      background-color: white;
    }

    /* Set gray background color and 100% height */
    .sidenav {
      height: 100%;
      padding: 20px;
    }

    .inventory {
      padding: 20px;
      margin-top: 20px;
      border: 2px dashed grey;
      border-radius: 5px;
    }

    .nav-pills > li.active > a:hover{
      background-color: #afbc26;
      color:whitesmoke;
    }

    .nav-pills > li.active > a:active{
      background-color: #afbc26;
      color:whitesmoke;
    } 

    .nav-pills>li:not(.active)>a:hover {
      background-color: ghostwhite;
    }

    .nav-pills a{
      color:#afbc26;
    }

    .btn {
      background-color: #afbc26;
      margin-top: 30px;
      border: none
    }
  

    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;} 
    }
  </style>
</head>
<body onload="getData(); getRecipes();">

<!-- MOBILE -->

<nav class="navbar navbar-inverse visible-xs">
  <div class="container-fluid">
    <div class="navbar-header" style="background-color: #afbc26">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>                        
      </button>
      <a class="navbar-brand" style="color: whitesmoke" href="#">Cook Up a Plan</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Inventory</a></li>
        <li><a href="#">Recipes</a></li>
        <li><a href="#">Notifications</a></li>
        <!-- <li><a href="#">Geo</a></li> -->
      </ul>
    </div>
  </div>
</nav>

<!-- DESKTOP -->
<div class="container-fluid">
  <div class="row content">
    <div class="col-sm-3 sidenav hidden-xs" >
      <h2>Cook Up a Plan</h2>
      <ul class="nav nav-pills nav-stacked">
        <li><a id="InventButton" href="#section1">Inventory</a></li>
        <li><a id="MenuButton" href="#section2">Recipes</a></li>
        <li><a id="NotifButton" href="#section3">Notifications</a></li>
        <!-- <li><a href="#section3">Geo</a></li> -->
      </ul><br>
    </div>
    <br>
    
    <div class="col-sm-9">
      <div class="col-sm-9">
        <h2>Good morning, Mimi!</h2> 
        <p>
            <script> 
              document.write(new Date().toLocaleDateString("en-GB", {weekday:"long", month:"long", day:"numeric", year:"numeric"})); 
            </script>
        </p>
      </div>
      <div class="col-sm-3">
        <a id="refresh" class="btn btn-info btn-lg">
          <span class="glyphicon glyphicon-refresh"></span> Refresh
        </a>
      </div>
    </div>
    <div class="col-sm-8">
      <div class="inventory" id="Inventory">
        <h4>Food Inventory</h4>
        <p id="items"></p>
        <table class="table" id="table" align = "center" border="1px"></table>
      </div>
      <div class="inventory" id="Recipes" style="display:none">
        <h4>Suggested Recipes</h4>
        <p id="recipes" ></p>
        <table class="table" id="menu-table" align = "center" border="1px"></table>
      </div>
      <div class="inventory" id="Notifications"  style="display:none">
        <h4>Notifications</h4>
        <p> blah blah blah </p>
      </div>
    </div>
  </div>
</div>

</body>
<script>

    /////////////////  START JAVASCRIPT
  function getColumn(selector, column) {
  var rows = document.querySelector(selector).getElementsByTagName('tr');
  return [].slice.call(rows).map(function(tr) {
      return tr.getElementsByTagName('td')[column].innerText;
  });
}

  const onClick = function() {
    // console.log(this.innerHTML)
    var x = document.getElementById(this.innerHTML);
    var y = document.getElementById(this.id)
    const list = y.classList;
    if (x.style.display === "none") {
      x.style.display = "block";
      y.style.backgroundColor = "#afbc26";
      y.style.color = "whitesmoke";
      list.add("active");
    } else {
      x.style.display = "none";
      y.style.backgroundColor = "white";
      y.style.color = "#afbc26";
      list.remove("active");
    }
  }

  document.getElementById('MenuButton').onclick = onClick;
  document.getElementById('NotifButton').onclick = onClick;
  document.getElementById('InventButton').onclick = onClick;

  //////////////  Initialise Variables & Functions here
  var variables = [];
  var timestamp = [];
  var recipes = [];
  var expiry = [];
  var date = Date.now() / 1000;
    
  var DateDiff = {

      inHours: function(d1, d2) {
  
          return Math.floor((d2-d1)/(3600));
      },

      inDays: function(d1, d2) {

          return Math.floor((d2-d1)/(24*3600));
      },
  };

  let text = "";
  function createList(foods, timestamp, date) {
      for (let i = 0; i < foods.length; i++) {
          text += foods[i].toLowerCase() +"    "+ DateDiff.inDays(timestamp[i], date) + " days" + "<br>";
          }
  return text; 
  }

  let menu = "";
  function createMenu(recipes) {
      for (let i = 0; i < recipes.length; i++) {
          menu += (i+1) + ". " + recipes[i] + "<br>";
          }
  return menu; 
  }

    /////////////////////  GET DATA ()

  function getData() {
      window.fetch('/getdata', {
          "method": "POST",
          "headers": {"Content-Type": "application/json"}
      }).then(function (responseObj) {
          foods = [];
          timestamp = [];
          expiry = [];
          return  responseObj.json()
      }).then(function (list) {
          var cols = [];
          var x = [];
          for (var i = 0; i < list.length; i++) {
              for (var k in list[i]) {
                  if (cols.indexOf(k) === -1) {
                        
                      // Push all keys to the array
                      cols.push(k);
                  }
              }
          }
          
          // Create a table element
          var table = document.createElement("table");
          table.classList.add("table")
            
          // Create table row tr element of a table
          var tr = table.insertRow(-1);
          
          // remove first col data 
          for (var i = 1; i < cols.length+1; i++) {
                
              // Create the table header th element
              var theader = document.createElement("th");
              theader.innerHTML = cols[i];
              if (i==4) {
                theader.innerHTML = "Time until expiry"
              }
              // Append columnName to the table row
              tr.appendChild(theader);
          }
            
          // Adding the data to the table
          for (var i = 0; i < list.length; i++) {
              // Create a new row
              trow = table.insertRow(-1);
              // remove first col header
              for (var j = 1; j < cols.length; j++) {
                  var cell = trow.insertCell(-1);
                  if (j === 2) {
                    // Get Time in 
                    let time_in = list[i][cols[j]] * 1000
                    let time_obj = new Date(time_in)
                    let dateFormat = time_obj.toLocaleString()
                    cell.innerHTML = dateFormat // DateDiff.inDays(list[i][cols[j]], date) + " days"
                  }
                  // If no expiry date in j===3, set one
                  else if (list[i][cols[j]]==="N/A") {
                    let expiry = prompt("What date does the "+list[i][cols[1]]+" expire? (DD/MM/YY)")
                    list[i][cols[j]] = expiry;
                    cell.innerHTML = list[i][cols[j]];
                    var send = {"_id": list[i][cols[0]], "Expiry Date": expiry};
                    var sendString = JSON.stringify(send);
                    let testReq = window.fetch("/expiry", {
                      method: "POST",
                      body: sendString,
                      headers: {
                        "Content-Type": "application/json",
                      }
                    })
                    if (j===3) {
                      var parts =expiry.split('/');
                      var mydate = new Date((20+parts[2]), parts[1] - 1, parts[0]); 
                      var cell = trow.insertCell(-1);
                      var today = new Date()
                      var diff = mydate-today.getTime()
                      var days = Math.floor(diff/(1000*3600*24))
                      cell.innerHTML = days + " days";
                      x[i] = (list[i][cols[1]], days)
                    }
                  }
                  // If there is an expiry date, set 
                  else {
                    let expiry = list[i][cols[3]];
                    cell.innerHTML = list[i][cols[j]];
                    
                    if (j===3) {
                      var parts =expiry.split('/');
                      var mydate = new Date((20+parts[2]), parts[1] - 1, parts[0]); 
                      var cell = trow.insertCell(-1);
                      var today = new Date()
                      var diff = today.getTime()-mydate
                      var days = Math.floor(diff/(1000*3600*24))
                      cell.innerHTML = days + " days";
                      x[i] = [list[i][cols[1]], days];
                    }
                  }
                  // if (j===4) {
                  //   var cell = trow.insertCell(-1);
                  //   var expiry = new Date(expiry)
                  // }
              }
            }
            
          // Add the newly created table containing json data
          var el = document.getElementById("table");
          // console.log(el)
          el.innerHTML = "";
          el.appendChild(table);
      return x
      // text = createList(foods, timestamp, date);

      // document.getElementById("items").innerHTML = text;
      // document.getElementById("times").innerHTML = timestamp;
      // document.getElementById("date").innerHTML = DateDiff.inDays(timestamp, date);
      // document.getElementById("hours").innerHTML = DateDiff.inHours(timestamp, date);

      
      })
      // Return array {[item, expiry]}
      .then(console.log)
      // Catch errors
      .catch(function (error) {console.log(error)});
    }


      /////////////////////  GET RECIPES ()
function getRecipes() {
  window.fetch('/getrecipes', {
        "method": "POST",
        "headers": {"Content-Type": "application/json"}
    }).then(function (responseObj){
      recipes = [];
      // console.log("object!")
      return  responseObj.json()
    }).then(function (list) {
      // console.log(list)
      var cols = [];
          
        for (var i = 0; i < list.length; i++) {
            for (var k in list[i]) {
                if (cols.indexOf(k) === -1) {
                      
                    // Push all keys to the array
                    cols.push(k);
                }
            }
        }
        
        // Create a table element
        var table = document.createElement("table");
        table.classList.add("table")
          
        // Create table row tr element of a table
        var tr = table.insertRow(-1);
        for (var i = 0; i < 2; i++) {
              
            // Create the table header th element
            var theader = document.createElement("th");
            
            theader.innerHTML = cols[i];
              
            // Append columnName to the table row
            tr.appendChild(theader);
        }
          
        // Adding the data to the table
        for (var i = 0; i < list.length; i++) {
            // Create a new row
            trow = table.insertRow(-1);
            for (var j = 0; j < 2; j++) {
                var cell = trow.insertCell(-1);
                if (j===0) {
                  cell.innerHTML = "<a href='" + list[i][cols[3]] + "''>" + list[i][cols[j]] + "</a>";
                }
                else {
                  cell.innerHTML = list[i][cols[j]];
                }
            }
          }
        // Add the newly created table containing json data
        var el = document.getElementById("menu-table");
        el.innerHTML = "";
        el.appendChild(table);
        var recipetable = el
        return recipetable
      })
      .then(function (recipetable) {
        var arr = [];
        var theAnchorText = document.querySelectorAll("#menu-table td")
        var data = theAnchorText.forEach(function (elem) {
          if (elem.textContent === undefined) {
          }
          else {
            arr.push(elem.textContent)
          }
          // console.log(arr)
        })
      //   //  => function (elem) {
      //   //   console.log(elem.textContent)
      //   //   if (elem.textContent === undefined) {
      //   //   }
      //   //   else {
      //   //     var tablepart = elem.textContent;
      //   //   }
          
      // })
      
        // var anchors = theAnchorText.innerHTML
        // data = [];
        // document.querySelectorAll("#menu-table td").forEach(innerHTML)
        // console.log(anchors)
        // console.log(theAnchorText)
      }).then(console.log(getColumn('#menu-table',1)))
      .catch(function (error) {console.log(error)});
};

var refresh = document.getElementById("refresh")

// Function for reloading the page
function getRefresh () {
    window.location.reload(true)
}
// Reload page on button click
refresh.onclick=getRefresh;

</script>