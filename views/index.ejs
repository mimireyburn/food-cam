<head>
  <title>Cook Up A Plan</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 550px}
    
    /* Change body font */ 
    body, a{
      font-family: 'Atkinson Hyperlegible', sans-serif; 
    }

    /* Set gray background color and 100% height */
    .sidenav {
      height: 100%;
      padding: 20px;
    }

    .inventory {
      padding: 20px;
      margin-top: 20px;
      border: 2px dashed grey;
      border-radius: 5px;
    }

    .nav-pills > li.active > a:hover{
      background-color: #afbc26;
      color:whitesmoke;
    } 

    .nav-pills>li:not(.active)>a:hover {
      background-color: ghostwhite;
    }

    .nav-pills a{
      color:#afbc26;
    }

    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;} 
    }
  </style>
</head>
<body onload="getData(); getRecipes();">

<!-- MOBILE -->

<nav class="navbar navbar-inverse visible-xs">
  <div class="container-fluid">
    <div class="navbar-header" style="background-color: #afbc26">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>                        
      </button>
      <a class="navbar-brand" style="color: whitesmoke" href="#">Cook Up a Plan</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Dashboard</a></li>
        <li><a href="#">Recipes</a></li>
        <li><a href="#">Notifications</a></li>
        <!-- <li><a href="#">Geo</a></li> -->
      </ul>
    </div>
  </div>
</nav>

<!-- DESKTOP -->

<div class="container-fluid">
  <div class="row content">
    <div class="col-sm-3 sidenav hidden-xs" >
      <h2>Cook Up a Plan</h2>
      <ul class="nav nav-pills nav-stacked">
        <li class="active" ><a href="#section1">Dashboard</a></li>
        <li><a href="#section2">Recipes</a></li>
        <li><a href="#section3">Notifications</a></li>
        <!-- <li><a href="#section3">Geo</a></li> -->
      </ul><br>
    </div>
    <br>
    
    <div class="col-sm-9">
      <div class="inventory">
        <h4>Food Inventory</h4>
        <p id="items"></p>
        <p id="recipes"></p>
      </div>
    </div>
  </div>
</div>

</body>
<script>
    // Initialise Variables
    // here
    var variables = [];
    var timestamp = [];
    var recipes = [];
    var date = Date.now() / 1000;
    
    var DateDiff = {

        inHours: function(d1, d2) {
    
            return Math.floor((d2-d1)/(3600));
        },
 
        inDays: function(d1, d2) {

            return Math.floor((d2-d1)/(24*3600));
        },
    };

    let text = "";
    function createList(foods, timestamp, date) {
        for (let i = 0; i < foods.length; i++) {
            text += foods[i].toLowerCase() +"    "+ DateDiff.inDays(timestamp[i], date) + " days" + "<br>";
            }
    return text; 
    }

    let menu = "";
    function createMenu(recipes) {
        for (let i = 0; i < recipes.length; i++) {
            menu += (i+1) + ". " + recipes[i] + "<br>";
            }
    return menu; 
    }

    function getRecipes() {
      window.fetch('/getrecipes', {
            "method": "POST",
            "headers": {"Content-Type": "application/json"}
        }).then(function (responseObj){
          recipes = [];
          // console.log("object!")
          return  responseObj.json()
        }).then(function (jsonData) {
        jsonData.forEach(function (arrayElement) {
          recipes.push(arrayElement.recipe);
        })
        menu = createMenu(recipes);
        document.getElementById("recipes").innerHTML = menu;
      }).catch(function (error) {console.log(error)});
    }

    // Functions to get data with POST requests
    function getData() {
        window.fetch('/getdata', {
            "method": "POST",
            "headers": {"Content-Type": "application/json"}
        }).then(function (responseObj) {
            foods = [];
            timestamp = [];
            return  responseObj.json()
        }).then(function (jsonData) {
        jsonData.forEach(function (arrayElement) {
            // create entry for food item
            foods.push(arrayElement.food);
            timestamp.push(arrayElement.time);
        })

        text = createList(foods, timestamp, date);

        document.getElementById("items").innerHTML = text;
        // document.getElementById("times").innerHTML = timestamp;
        // document.getElementById("date").innerHTML = DateDiff.inDays(timestamp, date);
        // document.getElementById("hours").innerHTML = DateDiff.inHours(timestamp, date);

        // Catch errors
        }).catch(function (error) {console.log(error)});
    }
</script>

